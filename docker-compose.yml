services:
  postgres:
    image: postgres:14-alpine
    container_name: task_management_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-task_management}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - backend

#  redis:
#    image: redis:7-alpine
#    container_name: task_management_redis
#    ports:
#      - "${REDIS_PORT:-6379}:6379"
#    volumes:
#      - redis_data:/data
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#    restart: always
#    networks:
#      - backend

#  zookeeper:
#    image: bitnami/zookeeper:latest
#    container_name: task_management_zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    networks:
#      - backend

#  kafka:
#    image: bitnami/kafka:latest
#    container_name: task_management_kafka
#    ports:
#      - "9092:9092"
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    depends_on:
#      - zookeeper
#    networks:
#      - backend

  app:
    build: .
    container_name: task_management_api
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "${APP_PORT:-8000}:8000"
    env_file:
      - .env.example
    environment:
      - POSTGRES_SERVER=postgres
#      - REDIS_HOST=redis
#      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - postgres
#      - redis
#      - kafka
    networks:
      - backend

#  worker:
#    build: .
#    container_name: task_management_worker
#    command: celery -A src.worker.celery_app worker --loglevel=info
#    volumes:
#      - .:/app
#    env_file:
#      - .env.example
#    environment:
#      - POSTGRES_SERVER=postgres
##      - REDIS_HOST=redis
##      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    depends_on:
#      - postgres
##      - redis
##      - kafka
#    networks:
#      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: task_management_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data: